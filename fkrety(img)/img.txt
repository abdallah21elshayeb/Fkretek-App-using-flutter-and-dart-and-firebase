import 'dart:io';
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:image_picker/image_picker.dart';
import 'package:path/path.dart' as path;
// import 'package:path_provider/path_provider.dart' as syspaths;
import 'package:firebase_storage/firebase_storage.dart' as firebase_storage;
import 'package:firebase_database/firebase_database.dart';

import '../models/language_const.dart';
import '../widgets/save_image.dart';

class ImageInput extends StatefulWidget {
  final Function onSelectImage;

  ImageInput(this.onSelectImage);

  @override
  _ImageInputState createState() => _ImageInputState();
}

class _ImageInputState extends State<ImageInput> {
  File? _storedImage;
  Reference? ref;
  String? imageurl;
  List<XFile>? imageFileList = [];

  Future<void> _takePicture() async {
    ImagePicker imagePicker = ImagePicker();
    final imageFile = await imagePicker.pickMultiImage(
      maxWidth: 600,
    );
    if (imageFile!.isNotEmpty) {
      imageFileList!.addAll(imageFile);
    }
    for (var i = 0; i < imageFile.length; i++) {
      if (imageFile != null) {
        _storedImage = File(imageFile[i].path);
      }
      Utility.saveImageToPreferences(imageFile[i].path);
      print('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!');
      print(imageFile[i].path);
      print('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!');
      print(imageFile[i].path.toString());
      setState(() {
        _storedImage = File(imageFile[i].path);
      });
      final SharedPreferences prefs = await SharedPreferences.getInstance();
      print('===========-----======================');
      print(prefs.getStringList('IMAGES'));
      print(Utility.getImagesFromPreferences());

      final appDir = await syspaths.getApplicationDocumentsDirectory();

      final fileName = basename(imageFile[i].path);
      final savedImage = await _storedImage!.copy('${appDir.path}/$fileName');
      widget.onSelectImage(savedImage);
      // ref = FirebaseStorage.instance.ref('images').child('$fileName');
      print('============================================');
      print(ref);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Row(
      children: <Widget>[
        Container(
          width: 150,
          height: 100,
          decoration: BoxDecoration(
            border: Border.all(width: 1, color: Colors.grey),
          ),
          child: Padding(
            padding: const EdgeInsets.all(2.0),
            child: GridView.builder(
                itemCount: imageFileList!.length,
                gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 3,
                  mainAxisSpacing: 3,
                  crossAxisSpacing: 2,
                ),
                itemBuilder: (BuildContext context, int index) {
                  return Image.file(
                    File(imageFileList![index].path),
                    fit: BoxFit.cover,
                  );
                }),
          ),
        ),
        SizedBox(
          width: 10,
        ),
        Expanded(
          child: FlatButton.icon(
            icon: Icon(Icons.camera),
            label: Text(translation(context)!.addImage),
            textColor: Theme.of(context).primaryColor,
            onPressed: () {
              _takePicture();
            },
          ),
        ),
      ],
    );
  }
}
